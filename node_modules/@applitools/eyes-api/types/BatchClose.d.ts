import type * as core from '@applitools/core';
import { ProxySettings } from './input/ProxySettings';
declare type BatchCloseOptions = {
    batchIds: string[];
    serverUrl: string;
    apiKey: string;
    proxy?: ProxySettings;
};
declare type BatchCloseSpec = Pick<core.Core<unknown, unknown, unknown>, 'closeBatch'>;
export declare function closeBatch(spec: BatchCloseSpec): (options: BatchCloseOptions) => Promise<void>;
export declare class BatchClose {
    protected static readonly _spec: BatchCloseSpec;
    protected get _spec(): BatchCloseSpec;
    private _settings;
    static close(settings: BatchCloseOptions): Promise<void>;
    constructor(options?: BatchCloseOptions);
    close(): Promise<void>;
    setBatchIds(batchIds: string[]): this;
    setUrl(serverUrl: string): this;
    setApiKey(apiKey: string): this;
    setProxy(proxy: ProxySettings): this;
}
export {};
