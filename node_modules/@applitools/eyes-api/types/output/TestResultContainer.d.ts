import type * as core from '@applitools/core';
import { TestResults, TestResultsData } from './TestResults';
import { AndroidDeviceInfo, ChromeEmulationInfo, ChromeEmulationInfoLegacy, DesktopBrowserInfo, IOSDeviceInfo } from '../input/RenderInfo';
declare type RenderInfo = DesktopBrowserInfo | ChromeEmulationInfo | IOSDeviceInfo | AndroidDeviceInfo | ChromeEmulationInfoLegacy;
export declare type TestResultContainer = {
    readonly exception: Error;
    readonly testResults: TestResults;
    readonly browserInfo: RenderInfo;
};
export declare class TestResultContainerData implements Required<TestResultContainer> {
    private _container;
    private _deleteTest;
    /** @internal */
    constructor(options?: {
        container: core.TestResultContainer<'classic' | 'ufg'>;
        deleteTest: core.Core<unknown, unknown, unknown>['deleteTest'];
    });
    get testResults(): TestResults;
    getTestResults(): TestResultsData;
    get exception(): Error;
    getException(): Error;
    get browserInfo(): RenderInfo;
    getBrowserInfo(): RenderInfo;
    /** @internal */
    toObject(): TestResultContainer;
    /** @internal */
    toJSON(): core.TestResultContainer<'classic' | 'ufg'>;
    /** @internal */
    toString(): string;
}
export {};
